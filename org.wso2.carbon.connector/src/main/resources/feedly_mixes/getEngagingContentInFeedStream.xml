<template name="getEngagingContentInFeedStream" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="streamId" description="Id of the Entry." />
    <parameter name="count" description="Id of the Entry." />
    <parameter name="unreadOnly" description="Id of the Entry." />
    <parameter name="hours" description="Id of the Entry." />
    <parameter name="newerThan" description="Id of the Entry." />
    <parameter name="backfill" description="Id of the Entry." />
    <parameter name="locale" description="Id of the Entry." />

    <sequence>
        <property name="uri.var.id" expression="$func:streamId" />
        <property name="uri.var.count" expression="$func:count" />
        <property name="uri.var.unreadOnly" expression="$func:unreadOnly" />
        <property name="uri.var.hours" expression="$func:hours" />
        <property name="uri.var.newerThan" expression="$func:newerThan" />
        <property name="uri.var.backfill" expression="$func:backfill" />
        <property name="uri.var.locale" expression="$func:locale" />

        <property name="feedly.streamId"
                  expression="fn:concat('feed/', get-property('uri.var.id'))" />

        <filter
                xpath="get-property('uri.var.count') = '' or  (not(string(get-property('uri.var.count'))))">
            <then>
                <property name="uri.var.count" value="3" />
            </then>
        </filter>

        <filter
                xpath="get-property('uri.var.unreadOnly') = '' or  (not(string(get-property('uri.var.unreadOnly'))))">
            <then>
                <property name="uri.var.unreadOnly" value="false" />
            </then>
        </filter>

        <filter
                xpath="get-property('uri.var.backfill') = '' or  (not(string(get-property('uri.var.backfill'))))">
            <then>
                <property name="uri.var.backfill" value="true" />
            </then>
        </filter>

        <filter
                xpath="get-property('uri.var.locale') = '' or  (not(string(get-property('uri.var.locale'))))">
            <then>
                <property name="uri.var.locale" value="en_US" />
            </then>
        </filter>

        <script language="js"><![CDATA[

			var hours = mc.getProperty('uri.var.hours');
			var newerThan = mc.getProperty('uri.var.newerThan');

			var stream = encodeURIComponent(mc.getProperty('feedly.streamId'));
			mc.setProperty('uri.var.streamId', stream);

			var added = 1;
            var query = "";

            if((newerThan != null && newerThan != "") && (hours != null && hours != "")) {
                if(Boolean(added)) {
			        query = query + '&amp;newerThan='+newerThan;
			    }else {
			        query = query + 'newerThan='+newerThan;
			        added = 1;
			    }
            }else if((newerThan != null && newerThan != "") && !(hours != null && hours != "")) {
                if(Boolean(added)) {
			        query = query + '&amp;newerThan='+newerThan;
			    }else {
			        query = query + 'newerThan='+newerThan;
			        added = 1;
			    }
            }else if(!(newerThan != null && newerThan != "") && (hours != null && hours != "")) {
                if(Boolean(added)) {
			        query = query + '&amp;hours='+hours;
			    }else {
			        query = query + 'hours='+hours;
			        added = 1;
			    }
            }else {
                if(Boolean(added)) {
			        query = query + '&amp;hours=48';
			    }else {
			        query = query + 'hours=48';
			        added = 1;
			    }
            }

			mc.setProperty('uri.var.params', query);

         ]]></script>

        <log level="custom">
            <property name="params" expression="get-property('uri.var.params')"/>
        </log>


        <call>
            <endpoint>
                <http method="get"
                      uri-template="http://cloud.feedly.com/v3/mixes/{uri.var.streamId}/contents?count={uri.var.count}&amp;locale={uri.var.locale}&amp;backfill={uri.var.backfill}&amp;unreadOnly={uri.var.unreadOnly}{uri.var.params}" />
            </endpoint>
        </call>
    </sequence>
</template>