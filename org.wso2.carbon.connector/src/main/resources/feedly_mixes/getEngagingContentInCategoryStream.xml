<template name="getEngagingContentInCategoryStream" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="categoryId" description="Id of the Entry." />
    <parameter name="count" description="Id of the Entry." />
    <parameter name="unreadOnly" description="Id of the Entry." />
    <parameter name="hours" description="Id of the Entry." />
    <parameter name="newerThan" description="Id of the Entry." />
    <parameter name="backfill" description="Id of the Entry." />
    <parameter name="locale" description="Id of the Entry." />

    <sequence>
        <property name="uri.var.id" expression="$func:categoryId" />
        <property name="uri.var.count" expression="$func:count" />
        <property name="uri.var.unreadOnly" expression="$func:unreadOnly" />
        <property name="uri.var.hours" expression="$func:hours" />
        <property name="uri.var.newerThan" expression="$func:newerThan" />
        <property name="uri.var.backfill" expression="$func:backfill" />
        <property name="uri.var.locale" expression="$func:locale" />

        <property name="feedly.streamId"
                  expression="fn:concat('user/', get-property('uri.var.userId'),'/category/',get-property('uri.var.id'))" />

        <script language="js"><![CDATA[

            var count = mc.getProperty('uri.var.count');
			var unreadOnly = mc.getProperty('uri.var.unreadOnly');
			var hours = mc.getProperty('uri.var.hours');
			var newerThan = mc.getProperty('uri.var.newerThan');
			var backfill = mc.getProperty('uri.var.backfill');
			var locale = mc.getProperty('uri.var.locale');

			var stream = encodeURIComponent(mc.getProperty('feedly.streamId'));
			mc.setProperty('uri.var.streamId', stream);

			var added = 0;
            var query = "";

			if (count != null && count != "") {
				if(Boolean(added)) {
			        query = query + '&amp;count='+count;
			    }else {
			        query = query + 'count='+count;
			        added = 1;
			    }
			}else {
			    if(Boolean(added)) {
			        query = query + '&amp;count=3';
			    }else {
			        query = query + 'count=3';
			        added = 1;
			    }
			}

			if (unreadOnly != null && unreadOnly != "") {
				if(Boolean(added)) {
			        query = query + '&amp;unreadOnly='+unreadOnly;
			    }else {
			        query = query + 'unreadOnly='+unreadOnly;
			        added = 1;
			    }
			}else {
			    if(Boolean(added)) {
			        query = query + '&amp;unreadOnly=false';
			    }else {
			        query = query + 'unreadOnly=false';
			        added = 1;
			    }
			}


            if((newerThan != null && newerThan != "") && (hours != null && hours != "")) {
                if(Boolean(added)) {
			        query = query + '&amp;newerThan='+newerThan;
			    }else {
			        query = query + 'newerThan='+newerThan;
			        added = 1;
			    }
            }else if((newerThan != null && newerThan != "") && !(hours != null && hours != "")) {
                if(Boolean(added)) {
			        query = query + '&amp;newerThan='+newerThan;
			    }else {
			        query = query + 'newerThan='+newerThan;
			        added = 1;
			    }
            }else if(!(newerThan != null && newerThan != "") && (hours != null && hours != "")) {
                if(Boolean(added)) {
			        query = query + '&amp;hours='+hours;
			    }else {
			        query = query + 'hours='+hours;
			        added = 1;
			    }
            }else {
                if(Boolean(added)) {
			        query = query + '&amp;hours=48';
			    }else {
			        query = query + 'hours=48';
			        added = 1;
			    }
            }

            /*
            var options = 0;
			if (newerThan != null && newerThan != "") {
				if(Boolean(added)) {
			        query = query + '&amp;newerThan='+newerThan;
			    }else {
			        query = query + 'newerThan='+newerThan;
			        added = 1;
			    }
			}else {
			    if(Boolean(added)) {
			        query = query + '&amp;newerThan=1367539068016';
			    }else {
			        query = query + 'newerThan=1367539068016';
			        added = 1;
			    }
			}

			if (hours != null && hours != "") {
				if(Boolean(added)) {
			        query = query + '&amp;hours='+hours;
			    }else {
			        query = query + 'hours='+hours;
			        added = 1;
			    }
			}else {
			    if(Boolean(added)) {
			        query = query + '&amp;hours=48';
			    }else {
			        query = query + 'hours=48';
			        added = 1;
			    }
			}*/

			if (backfill != null && backfill != "") {
				if(Boolean(added)) {
			        query = query + '&amp;backfill='+backfill;
			    }else {
			        query = query + 'backfill='+backfill;
			        added = 1;
			    }
			}else {
			    if(Boolean(added)) {
			        query = query + '&amp;backfill=true';
			    }else {
			        query = query + 'backfill=true';
			        added = 1;
			    }
			}

			if (locale != null && locale != "") {
				if(Boolean(added)) {
			        query = query + '&amp;locale='+locale;
			    }else {
			        query = query + 'locale='+locale;
			        added = 1;
			    }
			}else {
			    if(Boolean(added)) {
			        query = query + '&amp;locale=en_US';
			    }else {
			        query = query + 'locale=en_US';
			        added = 1;
			    }
			}

			mc.setProperty('uri.var.params', query);

         ]]></script>

        <log level="custom">
            <property name="params" expression="get-property('uri.var.params')"/>
        </log>


        <call>
            <endpoint>
                <http method="get"
                      uri-template="{uri.var.apiUrl}/v3/mixes/{uri.var.streamId}/contents?{uri.var.params}" />
            </endpoint>
        </call>
    </sequence>
</template>